"""
Django settings for tutorial project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$hk7d85fonoep*1_(@1e15^b)fey9df7a(15lpys9851sh1x%t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 开启debug模式。

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']  # 代表所有地址都可以访问，也可以指定地址访问。

# Application definition
# rest_framework_user_admin : username:Administrator password:740969264
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # 这是我自行添加的django-rest-framework包，注意不要忘记英文逗号
    'corsheaders',  # 这是我自行添加的django-cors-headers包，注意不要忘记英文逗号
    # add snippets'configretion
    'snippets.apps.SnippetsConfig',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.

    # Cannot apply DjangoModelPermissionsOrAnonReadOnly on a view that does not set `.queryset` or have a `.get_queryset()` method.
    'DEFAULT_PERMISSION_CLASSES': [

        # 设置permision classes 则会报该异常：
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'

        # 引入simplejwt验证模块，用于JWT验证
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ],

    # Use Django's pagination 'rest_framework.pagination.PageNumberPagination'
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,

}

MIDDLEWARE = [
    # 中间件，request从上往下，依次处理，response从下往上，依次处理。
    'corsheaders.middleware.CorsMiddleware',  # 这里在最前面添加一个跨域中间件。
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tutorial.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tutorial.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # mysql引擎
        'NAME': 'f_django_rest_db',  # 数据库
        'USER': 'root',
        'PASSWORD': '740969264',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

# LANGUAGE_CODE = 'zh-Hans'    #简体中文
# TIME_ZONE = 'Asia/Shanghai'  #上海时间

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# simplejwt验证，自定义设置
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),  # access_token的持续时间
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # refresh_token的持续时间
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,

    'ALGORITHM': 'HS256',
    # 'SIGNING_KEY': settings.SECRET_KEY,
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(days=7),  # sliping_token的持续时间
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=7),
}

# 利用django-cors-headers，配置允许跨域，测试阶段配置
CORS_ALLOW_CREDENTIALS = True

# 允许所有人跨域访问
CORS_ORIGIN_ALLOW_ALL = True

# 允许所有的跨域请求头
CORS_ALLOW_HEADERS = ('*')
